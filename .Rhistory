template_columns[sample_locations$A == value]
ID_labeller <- function(variable, value) {
template_columns[sample_locations$A == value]
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller())
ID_labeller <- function(variable, value) {
template_columns[sample_locations$A == value]
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller())
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
value <- "A01"
i <- template_columns[sample_locations$A == value]
rm(i)
i <- template_columns[sample_locations$A == value]
i <- template_columns[sample_locations$A == value][1]
value <- "H12"
i <- template_columns[sample_locations$A == value][1]
ID_labeller <- function(variable, value) {
i <- template_columns[sample_locations$A == value][1]
ifelse(is.na(i), " ", i)
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
i <- template_columns[sample_locations$A == value]
ifelse(is.na(i), " ", i)
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
i <- template_columns[sample_locations$A == value]
ifelse(is.na(i), return (" "), return (i))
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
i <- sample_locations$B[sample_locations$A == value]
ID_labeller <- function(variable, value) {
i <- sample_locations$B[sample_locations$A == value]
ifelse(is.null(i), " ", i)
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
i <- sample_locations$B[sample_locations$A == value]
ifelse(i=="", " ", i)
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
i <- sample_locations$B[sample_locations$A == value]
ifelse(i=='', " ", i)
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
i <- df$ID[df$Well == value]
ifelse(i=="empty", " ", i)
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
df$ID[df$Well == value]
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
unique(df$ID)
ID_labeller <- function(variable, value) {
unique(df$ID)[df$Well == value]
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
df$ID[df$Well == value]
df$ID[df$Well == value][1]
ID_labeller <- function(variable, value) {
df$ID[df$Well == value][1]
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
value = "A01"
df$ID[df$Well == value][1]
value = "A02"
df$ID[df$Well == value][1]
df$ID[df$Well == value][[1]]
ID_labeller <- function(variable, value) {
df$ID[df$Well == value][[1]]
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
return (df$ID[df$Well == value][[1]])
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
View(df)
View(sample_locations)
View(sample_locations)
left_join(sample_locations, template_columns, by=B)
left_join(sample_locations, template_columns, by="B")
# Create a template of all possible columns
template_columns <- expand.grid(
if (plate == 96) {Var1 = LETTERS[1:8]}
else {Var1 = LETTERS[1:16]},
if (plate == 96) {Var2 = sprintf("%02d", 1:12)}
else {Var2 = sprintf("%02d", 1:24)}
)
View(template_columns)
template_columns <- sort(paste0(template_columns$Var1, template_columns$Var2))
# Create a template of all possible columns
template_columns <- expand.grid(
if (plate == 96) {Var1 = LETTERS[1:8]}
else {Var1 = LETTERS[1:16]},
if (plate == 96) {Var2 = sprintf("%02d", 1:12)}
else {Var2 = sprintf("%02d", 1:24)}
)
template_columns <- c("B" = sort(paste0(template_columns$Var1, template_columns$Var2)))
view(template_columns)
names(template_columns) <- "B"
view(template_columns)
colnames(template_columns) <- c("B")
rm(Var1, Var2)
# Create a template of all possible columns
template_columns <- expand.grid(
if (plate == 96) {Var1 = LETTERS[1:8]}
else {Var1 = LETTERS[1:16]},
if (plate == 96) {Var2 = sprintf("%02d", 1:12)}
else {Var2 = sprintf("%02d", 1:24)}
)
template_columns <- sort(paste0(template_columns$Var1, template_columns$Var2))
# colnames(template_columns) <- c("B")
rm(Var1, Var2)
View(sample_locations)
full <- left_join(sample_locations, template_columns, by="B")
full <- left_join(sample_locations,
as.data.frame(template_columns),
by="B")
full <- left_join(sample_locations,
as.data.frame(template_columns),
by=B)
full <- left_join(sample_locations,
as.data.frame(template_columns),
by=x)
# Combine the template_columns and sample_locations.
template_columns <- as.data.frame(template_columns)
colnames(template_columns) <- "B"
View(template_columns)
full <- left_join(sample_locations,
as.data.frame(template_columns),
by=B)
full <- left_join(sample_locations,
as.data.frame(template_columns),
by="B")
View(full)
?left_join
full <- left_join(sample_locations,
as.data.frame(template_columns),
keep=T)
View(full)
colnames(template_columns) <- "A"
full <- left_join(sample_locations,
as.data.frame(template_columns),
keep=T)
full <- full_join(sample_locations,
as.data.frame(template_columns))
ID_labeller <- function(variable, value) {
return (full$B[full$A == value][[1]])
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
full$B[full$A == value]
ID_labeller <- function(variable, value) {
return (full$B[full$A == value])
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
full <- full_join(sample_locations,
as.data.frame(template_columns)) %>%
arrange(A)
View(full)
ID_labeller <- function(variable, value) {
return (full$B[full$A == value])
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
ID_labeller <- function(variable, value) {
i <- full$B[full$A == value]
ifelse(is.na(i), " ", i)
}
# Create a facet plot.
df %>%
ggplot(aes(x = Time, y = value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic2() +
theme(panel.border     = element_rect(colour = "black",
fill = NA,
size = 0.5),
strip.background = element_blank(),
axis.text.x      = element_blank(),
axis.text.y      = element_blank()) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller)
source("~/RTQ_analysis/plate_view_export.R", echo=TRUE)
ggsave("plate_view.png", width = 3600, height = 2400, units = "px")
library(stringr)
library(readxl)
library(tidyverse)
library(writexl)
library(openxlsx)
library(reshape2)
library(ggpubr)
?rename
source("~/RTQ_analysis/plate_view_export.R", echo=TRUE)
setwd("C:/Users/rowde002/Box/MNPRO/RT-QuIC/RT-QuIC Data/Gage's RT-QuIC Runs/2024/20240722_r6_GR_scrapie_Nano")
source("~/RTQ_analysis/plate_view_export.R", echo=TRUE)
setwd("C:/Users/rowde002/Box/MNPRO/RT-QuIC/RT-QuIC Data/Gage's RT-QuIC Runs/2024/20240722_r3_GR_scrapie_Nano")
source("~/RTQ_analysis/plate_view_export.R", echo=TRUE)
setwd("C:/Users/rowde002/Box/MNPRO/RT-QuIC/RT-QuIC Data/Gage's RT-QuIC Runs/2024/20240722_r2_GR_scrapie_RT")
source("~/RTQ_analysis/plate_view_export.R", echo=TRUE)
setwd("C:/Users/rowde002/Box/MNPRO/RT-QuIC/RT-QuIC Data/Gage's RT-QuIC Runs/2024/20240722_r1_GR_scrapie_RT")
source("~/RTQ_analysis/plate_view_export.R", echo=TRUE)
install.packages(devtools)
install.packages("devtools")
install.packages("rtools")
R.version()
R.version
?require
install.packages("rtools")
install.packages("rtools")
install.packages("rtools")
?install.packages
install.packages("roxygen2")
library(quicR)
library(devtools)
install_github("gage1145/quicR")
usethis::use_version()
usethis::use_news_md()
