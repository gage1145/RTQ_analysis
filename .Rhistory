library(bslib)
shiny::runApp()
runApp()
install.packages(roxygen2)
install.packages("roxygen2")
devtools::create("RTQ_analysis")
devtools::create("quicR")
here::dr_here()
devtools::create("quicR")
install.packages(c("ggforce", "ggrepel", "ggridges", "googledrive", "googlesheets4", "knitr", "openxlsx", "rlang", "rmarkdown", "roxygen2", "rstudioapi", "shiny"))
setwd("~/Work/RTQ_analysis/R")
Sys.setenv(PATH = paste("C:/Rtools/bin", Sys.getenv("PATH"), sep=";"))
Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")
Sys.setenv(PATH = paste("C:/Rtools/bin", Sys.getenv("PATH"), sep=";"))
Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")
devtools::document()
devtools::document()
devtools::document()
?calculate_MPR
?read.csv
?na.omit
?devtools::check
?slice
devtools::document()
?calculate_MS
?na.omit
?cell_cols
?unite
?rename
?replace_na
?vars
?separate
setwd("C:/Users/gage1/Box/MNPRO/RT-QuIC/RT-QuIC Data/Gage's RT-QuIC Runs/2024/20240814_r9_GR_swabs_12-22_Nano")
source("~/Work/RTQ_analysis/plate_view_export.R", echo=TRUE)
View(df_meta)
df <- data.frame(df_list[[df_id]])
View(df)
# Specify the time column.
time_col <- df[, 1]
# Remove the time column and ID row.
df <- df[, -1]
# Set the time column as the df index.
rownames(df) <- time_col
# Get the wells used in the run.
wells <- get_wells(file)
View(wells)
# Take the metadata and apply it into a dataframe for the plate_view function.
sample_locations <- na.omit(do.call(rbind, Map(data.frame, A=wells, B=ID_list)))
View(sample_locations)
# Add the dilutions if applicable.
if (dilution_bool) {
sample_locations <- sample_locations %>%
mutate(Dilutions = -log10(as.numeric(dilutions))) %>%
unite(B, B:Dilutions, sep="\n")
}
View(sample_locations)
View(wells)
?plate_view
source("~/Work/RTQ_analysis/plate_view_export.R", echo=TRUE)
